---
name: CI

on:
    push:
        paths-ignore:
            - README.md
            - .editorconfig
            - .pre-commit-config.yaml

    release:
        types:
            - created

env:
    IMAGE_NAME: efsa-io/rbprettier

jobs:
    build:
        runs-on: ubuntu-20.04
        steps:
            - uses: actions/checkout@v2

            - name: Set up Docker Buildx
              id: buildx
              uses: docker/setup-buildx-action@v1

            - name: Login to Github Packages
              uses: docker/login-action@v1
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Build image
              uses: docker/build-push-action@v2
              with:
                  context: .
                  file: Dockerfile
                  push: false
                  tags: |
                      ghcr.io/${{ env.IMAGE_NAME }}:${{ github.ref_name }}
                  outputs: type=docker,dest=${{ github.ref_name }}.tar

            - name: Upload image as artifact
              uses: actions/upload-artifact@v2
              with:
                  name: ${{ github.ref_name }}
                  path: ${{ github.ref_name }}.tar
                  if-no-files-found: error

    test:
        runs-on: ubuntu-20.04
        needs: [build]
        steps:
            - name: Download artifact
              uses: actions/download-artifact@v2
              with:
                  name: ${{ github.ref_name }}

            - name: Load Docker image from .tar
              run: |
                  docker load --input ${{ github.ref_name }}.tar

            - name: Prepare actual.rb
              run: |
                  touch actual.rb
                  echo '# frozen_string_literal: true' >> actual.rb
                  echo 'require "pp"' >> actual.rb
                  echo 'pp "Hello world"' >> actual.rb
                  cat actual.rb

            - name: Prepare expected.rb
              run: |
                  touch expected.rb
                  echo '# frozen_string_literal: true' >> expected.rb
                  echo "require 'pp'" >> expected.rb
                  echo "pp 'Hello world'" >> expected.rb
                  cat expected.rb

            - name: Run test
              run: |
                  docker run --rm \
                    -v $(pwd)/actual.rb:/src/actual.rb \
                    ghcr.io/${{ env.IMAGE_NAME }}:${{ github.ref_name }}

            - name: Comparing results
              run: |
                  if [ "$(cat actual.rb)" = "$(cat expected.rb)" ]; then
                      exit 0
                  else
                      exit 1
                  fi

    publish:
        runs-on: ubuntu-20.04
        if: github.event_name == 'release' && github.ref_type == 'tag'
        needs: [test]
        steps:
            - uses: actions/checkout@v2

            - name: Set up Docker Buildx
              id: buildx
              uses: docker/setup-buildx-action@v1

            - name: Login to Github Packages
              uses: docker/login-action@v1
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Build image and push to GitHub Container Registry
              uses: docker/build-push-action@v2
              with:
                  context: .
                  file: Dockerfile
                  push: true
                  tags: |
                      ghcr.io/${{ env.IMAGE_NAME }}:latest
                      ghcr.io/${{ env.IMAGE_NAME }}:${{ github.ref_name }}

            - name: Pull Docker image
              run: |
                  docker pull ghcr.io/${{ env.IMAGE_NAME }}:latest
                  docker pull ghcr.io/${{ env.IMAGE_NAME }}:${{ github.ref_name }}
